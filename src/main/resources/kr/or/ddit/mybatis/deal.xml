<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="deal">

	<insert id="insertDeal" parameterType="dealVO">
      INSERT 
         INTO deal
            (
               deal_no,
               deal_name,
               deal_price,
               deal_kind,
               deal_img,
               deal_date,
               deal_fix_revenue,
               deal_fix_expenditure,
               mem_no,
               deal_option,
               deal_division,
               deal_card_name)
         VALUES
             (
               deal_seq.nextval,      
               #{deal_name},   
               #{deal_price},
               #{deal_kind},
               #{deal_img},
               #{deal_date},
               #{deal_fix_revenue},
               #{deal_fix_expenditure},
               #{mem_no},
               #{deal_option},
               #{deal_division},
               #{deal_card_name}
               )
         
   </insert>
   
   <select id="dealList" resultType="dealVO" parameterType="String">
		SELECT *
		FROM deal
		WHERE MEM_NO = #{mem_no}
		AND deal_fix_revenue = 0
		AND deal_fix_expenditure = 0
		ORDER BY deal_no
	</select>
	
	
   <select id="totalCount" resultType="String" parameterType="map">
		select count(*)
		from deal
		where 1=1 and mem_no = #{mem_no} AND deal_fix_revenue = 0
		AND deal_fix_expenditure = 0
						<if test="deal_name !=null">
							and 
							deal_name like '%' || #{deal_name} || '%' 
						</if>
						<if test="deal_option !=null">   
							and
							deal_option like #{deal_option}
						</if> 
						<if test="deal_division !=null">
							and
							deal_division like #{deal_division} 
						</if> 
						<if test="deal_kind !=null">
							and
							deal_kind like #{deal_kind} 
						</if> 
						<if test="deal_card_name !=null">
								and
								deal_card_name like #{deal_card_name} 
						</if>
						<if test="startDate !=null">
							and
						<![CDATA[	deal_date > to_date(#{startDate},'yyyy-mm-dd') ]]>
						</if> 
						<if test="endDate !=null">
							and
						<![CDATA[	deal_date < to_date(#{endDate},'yyyy-mm-dd') ]]>
						</if> 
						<if test="deal_year !=null">  
							and
						<![CDATA[	deal_date between  to_date(#{deal_year}||'01','yyyymm') and to_date(#{deal_year}||'12','yyyymm') ]]>
						</if> 
						<if test="deal_bungi !=null">  
							and
						<![CDATA[	deal_date between  to_date('2020'||#{bungiStart},'yyyymm') and last_day(to_date('2020'||#{bungiEnd},'yyyymm')) ]]>
						</if> 
						<if test="deal_month !=null">  
							and
						<![CDATA[	deal_date between  to_date('2020'||#{deal_month},'yyyymm') and last_day(to_date('2020'||#{deal_month},'yyyymm')) ]]>
						</if>
	</select>
	
	<select id="dealInfo" parameterType="String" resultType="dealVO"> 
		select *
		from deal
		where deal_no = #{deal_no}
	</select>
	
	
	<select id="searchList" parameterType="map" resultType="dealVO">
	select b.*	
		from(select ROWNUM rnum, a.*
			 from(select *
				  from deal
			  	  where 1=1 and mem_no = #{mem_no} AND deal_fix_revenue = 0
					AND deal_fix_expenditure = 0
							<if test="deal_name !=null">	
								and 
								deal_name like '%' || #{deal_name} || '%' 
							</if>
							<if test="deal_option !=null">   
								and
								deal_option like #{deal_option}
							</if> 
							<if test="deal_division !=null">
								and
								deal_division like #{deal_division} 
							</if> 
							<if test="deal_kind !=null">
								and
								deal_kind like #{deal_kind} 
							</if> 
							<if test="deal_card_name !=null">
								and
								deal_card_name like #{deal_card_name} 
							</if> 
							<if test="startDate !=null">
								and
							<![CDATA[	deal_date > to_date(#{startDate},'yyyy-mm-dd') ]]>
							</if> 
							<if test="endDate !=null">
								and
							<![CDATA[	deal_date < to_date(#{endDate},'yyyy-mm-dd') ]]>
							</if> 
							<if test="deal_year !=null">  
								and
							<![CDATA[	deal_date between  to_date(#{deal_year}||'01','yyyymm') and to_date(#{deal_year}||'12','yyyymm') ]]>
							</if> 
							<if test="deal_bungi !=null">  
								and
							<![CDATA[	deal_date between  to_date('2020'||#{bungiStart},'yyyymm') and last_day(to_date('2020'||#{bungiEnd},'yyyymm')) ]]>
							</if> 
							<if test="deal_month !=null">  
								and
							<![CDATA[	deal_date between  to_date('2020'||#{deal_month},'yyyymm') and last_day(to_date('2020'||#{deal_month},'yyyymm')) ]]>
							</if>
				)a
			)b
		<![CDATA[
			WHERE B.RNUM <= #{startCount}
			AND B.RNUM >= #{endCount}
		]]>
	</select>



	<select id="dealListView" resultType="dealVO" parameterType="map">
		SELECT B.*
			FROM(SELECT A.*, ROWNUM RNUM
					FROM(SELECT DEAL.*
					FROM DEAL
					WHERE MEM_NO = #{mem_no}
					AND deal_fix_revenue = 0
					AND deal_fix_expenditure = 0
				ORDER BY DEAL_NO
				)A
			)B
			<![CDATA[
				WHERE B.RNUM <= #{startCount}
				AND B.RNUM >= #{endCount}
	        ]]>	
	      ORDER BY DEAL_NO DESC 
	</select>
	
	
	 <select id="cardList" resultType="cardVO" parameterType="String">
		SELECT *
		FROM card
		WHERE MEM_NO = #{mem_no}
		ORDER BY CARD_NO
		
	</select>
	
	
	<insert id="registCard" parameterType="cardVO">
      INSERT 
         INTO card
            (
               card_no,
               mem_no,
               card_kind)
         VALUES
             (
               card_seq.nextval,      
               #{mem_no},
               #{card_kind}
               )
         
   </insert>
   
   <delete id="deleteCard" parameterType="String">
   	 DELETE 
      FROM CARD
      WHERE CARD_NO = #{card_no}
   </delete>
   <update id="updateAccount" parameterType="String">
   	 update
     deal
     set deal_date = #{deal_date}, deal_name = #{deal_name},
     		deal_price = #{deal_price}, deal_division = #{deal_division},
     		deal_option = #{deal_option}, deal_kind = #{deal_kind}, deal_card_name = #{deal_card_name}
     WHERE deal_no = #{deal_no}
   </update>
	
   <delete id="deletedeal" parameterType="String">
   	 DELETE 
      FROM DEAL
      WHERE DEAL_NO = #{deal_no}
   </delete>
	
	<select id="selectexpenditure" resultType="dealVO">
		select * from deal where DEAL_FIX_EXPENDITURE=1
	</select>
			
	<select id="selectrevenue" resultType="dealVO">
		select * from deal where DEAL_FIX_REVENUE=1
	</select>
	
	<select id="staticList" resultType="dealVO" parameterType="String">
		select * from deal 
		where MEM_NO= #{mem_no}
		AND( DEAL_FIX_EXPENDITURE=1 OR DEAL_FIX_REVENUE=1 )
		order by deal_no
	</select>
	
</mapper>    

